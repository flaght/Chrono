signal_str_md = """
| SignalName | CoreIdea | StrategyExplanation | Advantages | KeyParameters|
| :--- | :--- | :--- | :--- | :--- |
| **simple_signal** | - 零轴突破<br>- 标准化处理<br>- 阈值控制<br>- 简单有效 | 基于零轴突破的简单信号策略。通过比较标准化后的因子值与零轴（或设定阈值）的关系来生成交易信号。当因子值突破上阈值时产生做多信号，反之做空。体现了"突破即信号"的简单交易理念。 | - 简单直观，易于实现<br>- 计算高效，执行速度快<br>- 参数较少<br>- 可作为其他复杂策略的基础 | `roll_num`: 标准化滚动窗口<br>`threshold`: 突破阈值 |
| **mean_signal** | - 均值回归<br>- 滚动均值<br>- 偏离程度<br>- 趋势捕捉 | 基于均值回归理论的信号策略。通过比较当前因子值与滚动均值的偏离程度来生成交易信号。当因子值显著低于历史均值时做多，显著高于时做空，体现了"价格终将回归均值"的理念。 | - 基于经典的均值回归理论<br>- 逻辑清晰，简单有效<br>- 滚动窗口能适应市场变化<br>- 通过阈值控制过度交易 | `roll_num`: 计算均值的滚动窗口<br>`threshold`: 偏离阈值 |
| **momentum_signal** | - 动量效应<br>- 变化率计算<br>- 趋势平滑<br>- 趋势跟踪 | 基于动量效应的信号策略，通过捕捉因子值的变化趋势生成信号。当因子值呈现上升趋势时做多，下降趋势时做空，体现了"趋势延续"的投资理念。 | - 有效捕捉中期趋势机会<br>- 利用价格运动的惯性特征<br>- 均值平滑处理减少噪音<br>- 滚动窗口适应不同市场环境 | `roll_num`: 计算变化率的滚动窗口<br>`threshold`: 趋势阈值 |
| **quantile_signal** | - 超买超卖<br>- 分位数阈值<br>- 区间突破<br>- 反转交易 | 基于分位数突破的信号策略，类似RSI超买超卖。通过计算滚动窗口内的分位数阈值识别极值区域。当因子值突破下分位数（超卖）时做多，突破上分位数（超买）时做空，体现"物极必反"的反转理念。 | - 有效识别超买超卖区域<br>- 捕捉价格反转机会<br>- 动态阈值随市场环境调整<br>- 避免在极值区域追涨杀跌 | `roll_num`: 计算分位数的滚动窗口<br>`threshold`: 分位数阈值 |
| **adaptive_signal** | - 波动率标准化<br>- 动态分位数<br>- 自适应调整 | 基于波动率自适应的分位数策略。当市场波动率较高时，自动扩大分位数区间以降低信号敏感度；当波动率较低时，缩小分位数区间以增强信号敏感度，有效应对不同市场环境。 | - 自动适应不同市场波动<br>- 高波动率时降低信号频率<br>- 低波动率时增强信号敏感度<br>- 基于分位数的非参数方法 | `roll_num`: 滚动窗口大小<br>`threshold`: 基础分位数阈值 |
| **volatility_signal** | - 波动率标准化<br>- 动态阈值<br>- 风险调整 | 基于波动率调整的动量策略。当市场波动率较高时，降低信号强度以控制风险；当波动率较低时，增强信号强度以捕捉趋势机会。结合了动量策略的趋势跟踪能力和波动率策略的风险控制优势。 | - 向量化计算，高效<br>- 动态波动率阈值调整风险<br>- 结合动量策略捕捉趋势<br>- 针对分钟频数据优化 | `roll_num`: 滚动窗口大小<br>`threshold`: 基础信号阈值 |
| **breakout_signal** | - 通道构建<br>- 突破确认<br>- 趋势确认<br>- 动量增强 | 基于价格突破理论的信号策略。通过识别因子值对关键阻力位（上轨）和支撑位（下轨）的突破来生成信号，体现了"突破确认趋势"的交易理念。 | - 有效确认趋势的启动和延续<br>- 及时捕捉价格突破关键时点<br>- 与均值回归策略形成互补<br>- 向量化操作，计算高效 | `roll_num`: 构建通道的滚动窗口<br>`threshold`: 突破阈值 |
| **triple_barrier_signal**| - 通道突破<br>- 趋势确认<br>- 动量验证<br>- 趋势跟踪 | 基于三重屏障理论的趋势跟踪策略。通过计算滚动均值和标准差构建通道，当因子值突破上轨且继续上涨时做多，突破下轨且继续下跌时做空，体现了"突破确认"的趋势跟踪理念。 | - 有效捕捉趋势性突破机会<br>- 通过趋势确认过滤假突破<br>- 动态通道随市场波动调整<br>- 通道内不交易，降低噪音 | `roll_num`: 计算通道的滚动窗口<br>`threshold`: 通道宽度倍数 |
| **oscillator_signal** | - 周期识别<br>- 极值检测<br>- 振荡强度<br>- 周期轮动 | 基于价格振荡理论的信号策略。通过识别因子值的周期性波动来生成交易信号。当因子值处于振荡周期的低点时做多，处于高点时做空，体现了"周期轮动"的投资理念。 | - 有效识别价格振荡周期<br>- 在周期极值点进行反向操作<br>- 与趋势策略形成互补<br>- 向量化操作，计算高效 | `roll_num`: 识别周期的滚动窗口<br>`threshold`: 振荡阈值 |
| **divergence_signal** | - 背离检测<br>- RSI计算<br>- 极值比较<br>- 反转交易 | 基于技术分析中的背离理论，通过检测因子值与滚动RSI之间的背离关系来生成信号。当因子值创新高而RSI未创新高时做空（顶背离），反之做多（底背离），体现"背离即反转"的理念。 | - 有效捕捉趋势反转机会<br>- 识别价格与指标的背离信号<br>- 基于经典的技术分析理论<br>- 背离信号可预警趋势转折 | `roll_num`: 计算RSI和极值的滚动窗口<br>`threshold`: 背离阈值 |
| **regression_signal** | - 线性拟合<br>- 斜率预测<br>- 拟合优度<br>- 前瞻性 | 基于线性回归理论的信号策略，通过拟合因子值的时间序列来预测未来趋势。当回归斜率显著为正时做多，显著为负时做空，体现了"趋势预测"的前瞻性交易理念。 | - 前瞻性地预测趋势方向<br>- 基于严谨的线性回归理论<br>- 与滞后指标形成互补<br>- Numba加速，计算高效 | `roll_num`: 线性回归的滚动窗口<br>`threshold`: 斜率阈值 |
| **autocorr_signal** | - 自相关度量<br>- 趋势/反转识别<br>- 动态适应<br>- 滞后参数 | 基于时间序列自相关性原理，衡量因子值序列的惯性或反转特征。当自相关系数大于阈值时，认为存在惯性（做多）；小于负阈值时，认为存在反转（做空）。 | - 捕捉趋势惯性和反转信号<br>- 适合趋势跟踪和反转策略<br>- 与均值、动量等信号低相关<br>- 计算高效，参数简单 | `roll_num`: 计算自相关的滚动窗口<br>`threshold`: 自相关阈值<br>`lag`: 滞后周期 |
| **skewness_signal** | - 偏度度量<br>- 极端行为识别<br>- 动态适应 | 基于统计学中的偏度指标，衡量因子值分布的对称性。当偏度大于阈值时（极端正偏）做多，小于负阈值时（极端负偏）做空，用以识别市场中的极端行为。 | - 捕捉市场极端情绪和结构性变化<br>- 适合捕捉趋势启动或极端反转<br>- 与均值、波动率等信号低相关<br>- Numba加速，计算高效 | `roll_num`: 计算偏度的滚动窗口<br>`threshold`: 偏度阈值 |
| **kurtosis_signal** | - 峰度度量<br>- 极端波动识别<br>- 动态适应 | 基于统计学中的峰度指标，衡量因子值分布的尾部厚度。当峰度大于阈值时（极端波动）做空，小于负阈值时（极端平稳）做多，用以识别市场的极端波动或平稳状态。 | - 捕捉市场极端风险和黑天鹅事件<br>- 适合风险管理和极端行情捕捉<br>- 与均值、动量等信号低相关<br>- Numba加速，计算高效 | `roll_num`: 计算峰度的滚动窗口<br>`threshold`: 峰度阈值 |
| **entropy_signal** | - 信息熵<br>- 有序/混乱检测<br>- 自适应 | 基于信息熵理论的信号策略，通过计算信息熵来检测市场混乱度。当熵值较低（市场有序）时，产生趋势跟随信号；当熵值较高（市场混乱）时，产生反转信号，体现了"混乱度检测"的理念。 | - 有效识别市场的有序和混乱状态<br>- 根据市场状态自动调整策略<br>- 与传统价格指标形成互补<br>- Numba加速，计算高效 | `roll_num`: 计算熵的滚动窗口<br>`threshold`: 熵阈值<br>`bins`: 计算熵的分箱数 |
| **extreme_count_signal**| - 极端值计数<br>- 情绪识别<br>- 动态适应 | 基于极端值理论，统计滚动窗口内标准化因子值超过正/负阈值的频率。当极端低值频率高时（市场过冷）做多，极端高值频率高时（市场过热）做空，反映市场极端情绪。 | - 捕捉市场极端情绪的拐点<br>- 适合极端行情和反转捕捉<br>- 与趋势、均值等信号低相关<br>- Numba加速，计算高效 | `roll_num`: 计数的滚动窗口<br>`threshold`: 极端值阈值 |
| **icu_signal** | - 鲁棒回归<br>- 趋势终点<br>- 动态适应 | 基于Siegel repeated median回归的窗口均线，捕捉价格的稳健趋势。在窗口内用鲁棒回归进行拟合，取回归终点作为信号。适合抗噪声、抗异常点的趋势捕捉。 | - 鲁棒性强，抗极端值<br>- 能捕捉平滑趋势<br>- 适合高频/低频多场景<br>- Numba加速，计算高效 | `roll_num`: 鲁棒回归的滚动窗口<br>`threshold`: 信号阈值 |

"""

holding_str_md = """ 
| StrategyName | CoreIdea |StrategyExplanation | Advantages | KeyParameters |
| :--- | :--- | :--- | :--- | :--- |
| **simple_strategy** | - 信号平移<br>- 直接映射<br>- 基准策略 | 最基础的持仓策略。直接使用T-1时刻的信号乘以最大持仓手数，作为T时刻的持仓依据，无任何过滤或出场逻辑。 | - 极简明了，易于实现<br>- 计算高效，速度快<br>- 可作为回测基线或策略拼接的基础 | `max_volume`: 最大持仓手数 |
| **holding_strategy** | - 固定周期持仓<br>- 信号累加<br>- T-1信号开仓 | 根据T-1时刻的信号开仓，并固定持仓`holding_period`个周期后自动平仓。T时刻的持仓等于过去周期内所有信号的累加和，并受最大手数限制。 | - 逻辑简单，避免复杂出场逻辑<br>- 纯向量化实现，效率高<br>- 可作为基准策略 | `holding_period`: 固定持有周期<br>`max_volume`: 最大持仓手数 |
| **trailing_strategy** | - 百分比移动止损<br>- 动态跟踪 | 根据T-1时刻的信号开仓，并使用一个固定百分比来设置移动止损线。止损线随价格有利变动而移动，用于保护利润和控制回撤。 | - 有助于在趋势中“让利润奔跑”<br>- Numba加速，计算高效<br>- 自动化强，无需判断平仓点 | `trailing_percent`: 止损百分比<br>`max_volume`: 最大持仓手数 |
| **trailing_atr_strategy** | - ATR移动止损<br>- 波动率自适应<br>- 均线过滤 | 根据T-1时刻信号开仓，使用ATR（平均真实波幅）构建动态移动止损线。止损宽度随市场波动率自适应调整。同时结合均线作为辅助的趋势过滤器。 | - 止损宽度能自适应市场波动性<br>- 有效控制回撤，保护利润<br>- Numba加速，计算高效<br>- 均线过滤可减少逆势交易 | `atr_period`: ATR计算周期<br>`atr_multiplier`: ATR乘数<br>`maN`: 均线过滤周期<br>`max_volume`: 最大持仓手数 |
| **trend_strategy** | - 均线斜率过滤<br>- 顺势而为 | 这是一个信号过滤策略。计算N周期均线的斜率来判断趋势。只有当斜率方向与信号方向一致时才持仓（如上升趋势中出现做多信号），否则空仓。 | - 保证交易方向与中期趋势一致<br>- 过滤掉逆势交易信号<br>- 逻辑清晰，全向量化，计算高效 | `window`: 均线斜率计算窗口<br>`max_volume`: 最大持仓手数 |
| **meanrevert_strategy** | - 均值回归过滤<br>- 逢低做多<br>- 逢高做空 | 这是一个信号过滤策略。只有当价格偏离均线时才考虑信号：当价格低于均线且信号为多时做多；当价格高于均线且信号为空时做空。 | - 捕捉价格回归均值的机会<br>- 与趋势类策略相关性低<br>- 逻辑清晰，全向量化，计算高效 | `window`: 均值计算窗口<br>`max_volume`: 最大持仓手数 |
| **momentum_strategy** | - 动量反转过滤<br>- 逢跌做多<br>- 逢涨做空 | 这是一个信号过滤策略。计算N周期的价格动量。当动量为负（下跌）且信号为多时做多；当动量为正（上涨）且信号为空时做空。 | - 捕捉价格短期反转机会<br>- 与趋势策略相关性低<br>- 逻辑清晰，全向量化，计算高效 | `window`: 动量计算窗口<br>`max_volume`: 最大持仓手数 |
| **range_strategy** | - 区间突破过滤<br>- 唐奇安通道思想 | 这是一个信号过滤策略。计算过去N周期内的最高价和最低价。只有当价格突破前期高点且信号为多时做多；或跌破前期低点且信号为空时做空。 | - 捕捉价格极端突破机会<br>- 与均值回归策略相关性低<br>- 逻辑清晰，全向量化，计算高效 | `window`: 区间计算窗口<br>`max_volume`: 最大持仓手数 |
| **quantile_strategy** | - 分位数过滤<br>- 极端区间入场 | 这是一个信号过滤策略。计算当前价格在过去N周期内的分位数排名。只有当价格处于历史低分位且信号为多时做多；或处于历史高分位且信号为空时做空。 | - 捕捉价格极端区间的反转机会<br>- 与趋势策略相关性低<br>- 逻辑清晰，计算高效 | `window`: 分位数计算窗口<br>`low/high_quantile`: 高低分位阈值<br>`max_volume`: 最大持仓手数 |
| **rollingstddev_strategy**| - 波动率过滤<br>- 高波做多<br>- 低波做空 | 这是一个信号过滤策略。计算N周期价格的滚动标准差（波动率）。只有当波动率高于阈值且信号为多时做多；或波动率低于阈值且信号为空时做空。 | - 捕捉高波动或低波动市场机会<br>- 与常规策略相关性低<br>- 逻辑清晰，全向量化，计算高效 | `window`: 标准差计算窗口<br>`std_threshold`: 标准差阈值<br>`max_volume`: 最大持仓手数 |
| **turnover_strategy** | - 成交量均值过滤<br>- 放量做多<br>- 缩量做空 | 这是一个信号过滤策略。计算N周期成交量的均值。只有当成交量高于均值（放量）且信号为多时做多；或低于均值（缩量）且信号为空时做空。 | - 捕捉量价联动的市场机会<br>- 与纯价格策略相关性低<br>- 逻辑清晰，全向量化，计算高效 | `window`: 成交量均值窗口<br>`max_volume`: 最大持仓手数 |
| **open_interest_strategy**| - 持仓量均值过滤<br>- 增仓做多<br>- 减仓做空 | 这是一个信号过滤策略。计算N周期持仓量（Open Interest）的均值。只有当持仓量高于均值（资金流入）且信号为多时做多；或低于均值且信号为空时做空。 | - 捕捉资金流入流出的机会<br>- 与纯价格/成交量策略相关性低<br>- 逻辑清晰，全向量化，计算高效 | `window`: 持仓量均值窗口<br>`max_volume`: 最大持仓手数 |
| **gap_strategy** | - 跳空过滤<br>- 信号与跳空方向一致 | 这是一个信号过滤策略。仅当开盘价相比前一日收盘价出现指定幅度的跳空，且跳空方向与信号方向一致时才持仓，否则空仓。 | - 捕捉市场情绪的极端变化<br>- 过滤掉非跳空行情下的信号<br>- 逻辑简单，全向量化，效率高 | `gap_threshold`: 跳空比例阈值<br>`max_volume`: 最大持仓手数 |
| **pricegap_strategy** | - 价格跳变过滤<br>- 大幅波动/极端平稳 | 这是一个信号过滤策略。计算当前价格与N周期前价格的绝对差值。只有当差值超过阈值（大幅波动）且信号为多时做多；或差值低于阈值（极端平稳）且信号为空时做空。 | - 捕捉大幅波动或极端平稳的市场机会<br>- 与常规策略相关性低<br>- 逻辑清晰，全向量化，计算高效 | `window`: 价格跳变计算窗口<br>`gap_threshold`: 跳变幅度阈值<br>`max_volume`: 最大持仓手数 |
| **drawdown_strategy** | - 最大回撤过滤<br>- 极端回撤/平稳行情 | 这是一个信号过滤策略。计算N周期内的最大回撤。只有当回撤超过阈值（极端下跌）且信号为多时做多（博反弹）；或回撤极小（极端平稳）且信号为空时做空。 | - 捕捉极端行情反弹或平稳市做空机会<br>- 逻辑清晰，计算效率较高 | `window`: 最大回撤计算窗口<br>`dd_threshold`: 回撤阈值<br>`max_volume`: 最大持仓手数 |
| **volume_weighted_strategy**| - 成交量加权<br>- 风险自适应 | 根据T-1时刻的信号，并使用当前成交量与滚动成交量均值的比率来动态调整持仓权重。成交量放大时，持仓更激进；成交量缩小时，持仓更保守。 | - 能捕捉市场活跃度变化<br>- 自动适应不同市场环境<br>- 计算高效，实现简单 | `roll_num`: 成交量滚动窗口<br>`max_volume`: 最大持仓手数 |
"""
